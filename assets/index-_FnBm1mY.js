var w=Object.defineProperty;var p=(e,t,i)=>t in e?w(e,t,{enumerable:!0,configurable:!0,writable:!0,value:i}):e[t]=i;var h=(e,t,i)=>(p(e,typeof t!="symbol"?t+"":t,i),i);(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const r of document.querySelectorAll('link[rel="modulepreload"]'))s(r);new MutationObserver(r=>{for(const o of r)if(o.type==="childList")for(const n of o.addedNodes)n.tagName==="LINK"&&n.rel==="modulepreload"&&s(n)}).observe(document,{childList:!0,subtree:!0});function i(r){const o={};return r.integrity&&(o.integrity=r.integrity),r.referrerPolicy&&(o.referrerPolicy=r.referrerPolicy),r.crossOrigin==="use-credentials"?o.credentials="include":r.crossOrigin==="anonymous"?o.credentials="omit":o.credentials="same-origin",o}function s(r){if(r.ep)return;r.ep=!0;const o=i(r);fetch(r.href,o)}})();class O{constructor(t,i,s,r){h(this,"visited",!1);h(this,"walls",[!0,!0,!0,!0]);this.x=t,this.y=i,this.maxRow=s,this.maxColumn=r}get getX(){return this.x}get getY(){return this.y}getNeighbors(t){return[t[this.getNeighborIndex(this.x,this.y-1)],t[this.getNeighborIndex(this.x+1,this.y)],t[this.getNeighborIndex(this.x,this.y+1)],t[this.getNeighborIndex(this.x-1,this.y)]].filter(Boolean)}checkNeighbors(t){const i=this.getNeighbors(t).filter(({visited:s})=>!s);if(i.length>0)return i[Math.floor(Math.random()*i.length)]}getNeighborIndex(t,i){return t<0||i<0||t>this.maxColumn||i>this.maxRow?"":`${t}-${i}`}}const g=["ArrowUp","ArrowRight","ArrowDown","ArrowLeft"];class d{constructor(t,i){this.player=t,this.grid=i,window.addEventListener("keydown",s=>{g.includes(s.key)&&this.validMove(g.indexOf(s.code))&&this.player.update(g.indexOf(s.code))})}getPlayerPosition(){const{x:t,y:i}=this.player;return this.grid[`${t}-${i}`]}validMove(t){return!this.getPlayerPosition().walls[t]}}var a=(e=>(e[e.Top=0]="Top",e[e.Right=1]="Right",e[e.Bottom=2]="Bottom",e[e.Left=3]="Left",e))(a||{});const l=(e,t,i)=>{e.beginPath(),e.moveTo(...t),e.lineTo(...i),e.strokeStyle="red",e.lineWidth=5,e.stroke(),e.closePath()},u=(e,t,i,s="blue")=>{e.beginPath(),e.rect(...t,...i),e.fillStyle=s,e.fill(),e.closePath()};class y{constructor(t,i,s){this.ctx=t,this.boxWidth=i,this.boxHeight=s}drawMaze(t){for(const i of t)this.drawWalls(i)}drawGoal(t,i,s,r,o="blue"){u(this.ctx,[t,i],[s,r],o)}drawWalls(t){t.walls[a.Top]&&l(this.ctx,[this.startingX(t.getX),this.startingY(t.getY)],[this.startingX(t.getX)+this.boxWidth,this.startingY(t.getY)]),t.walls[a.Right]&&l(this.ctx,[this.startingX(t.getX)+this.boxWidth,this.startingY(t.getY)+this.boxHeight],[this.startingX(t.getX)+this.boxWidth,this.startingY(t.getY)]),t.walls[a.Bottom]&&l(this.ctx,[this.startingX(t.getX)+this.boxWidth,this.startingY(t.getY)+this.boxHeight],[this.startingX(t.getX),this.startingY(t.getY)+this.boxHeight]),t.walls[a.Left]&&l(this.ctx,[this.startingX(t.getX),this.startingY(t.getY)+this.boxHeight],[this.startingX(t.getX),this.startingY(t.getY)])}startingX(t){return t*this.boxWidth}startingY(t){return t*this.boxHeight}}class c{constructor(t,i,s,r){h(this,"gridData",{});h(this,"visitedCellStack",[]);h(this,"drawer");this.ctx=t,this.goal=i,this.cellWidth=s,this.cellHeight=r,this.drawer=new y(this.ctx,this.cellWidth,this.cellHeight)}get getGridData(){return Object.values(this.gridData)}isGoalCell(t,i){const[s,r]=this.goal;return s===t&&r===i}addCell(t,i){this.gridData[t]=i}draw(){const[t,i]=this.goal;this.drawer.drawGoal(t*this.cellWidth,i*this.cellHeight,this.cellWidth,this.cellHeight),this.drawer.drawMaze(this.getGridData)}resetVisited(){for(const t of this.getGridData)t.visited=!1;return this}generatePath(t,i){let s=this.gridData[`${t}-${i}`];for(;s&&!this.isGoalCell(s.getX,s.getY);){s.visited=!0;const r=s.checkNeighbors(this.gridData);r?(this.removeWalls(s,r),this.visitedCellStack.push(r),s=r):s=this.visitedCellStack.pop()}return this}generateUnvisitedPath(){let t=Object.values(this.gridData).filter(({visited:i})=>!i)[0];for(;t;){t.visited=!0;const i=t.checkNeighbors(this.gridData);i?(this.removeWalls(t,i),this.visitedCellStack.push(i),t=i):(t=this.visitedCellStack.pop(),t||(t=Object.values(this.gridData).filter(({visited:s})=>!s)[0]))}return this}removeWalls(t,i){i.getX!==t.getX?i.getX>t.getX?(t.walls[a.Right]=!1,i.walls[a.Left]=!1):(t.walls[a.Left]=!1,i.walls[a.Right]=!1):i.getY>t.getY?(t.walls[a.Bottom]=!1,i.walls[a.Top]=!1):(t.walls[a.Top]=!1,i.walls[a.Bottom]=!1)}}class f{constructor(t,i){this.x=t,this.y=i}update(t){switch(t){case a.Top:this.y-=1;break;case a.Right:this.x+=1;break;case a.Bottom:this.y+=1;break;case a.Left:this.x-=1;break}}}class m{constructor(t){h(this,"HEIGHT",400);h(this,"WIDTH",800);h(this,"ROW",15);h(this,"COLUMN",29);h(this,"ROW_MIDDLE",Math.floor(this.ROW/2));h(this,"COLUMN_MIDDLE",Math.floor(this.COLUMN/2));h(this,"BOX_WIDTH",this.WIDTH/this.COLUMN);h(this,"BOX_HEIGHT",this.HEIGHT/this.ROW);h(this,"TOTAL_CELL",this.ROW*this.COLUMN);h(this,"grid");h(this,"player");h(this,"ctx");h(this,"requestAnimation",0);t.height=this.HEIGHT,t.width=this.WIDTH,this.ctx=t.getContext("2d"),this.grid=new c(this.ctx,[this.COLUMN_MIDDLE,this.ROW_MIDDLE],this.BOX_WIDTH,this.BOX_HEIGHT),this.setUpGrid(),this.player=new f(0,0),new d(this.player,this.grid.gridData)}start(){this.grid.generatePath(this.COLUMN-1,this.ROW-1).resetVisited().generatePath(0,0).generateUnvisitedPath(),this.animate()}animate(){if(this.ctx.clearRect(0,0,this.WIDTH,this.HEIGHT),this.grid.draw(),u(this.ctx,[this.player.x*this.BOX_WIDTH,this.player.y*this.BOX_HEIGHT],[this.BOX_WIDTH,this.BOX_HEIGHT],"orange"),this.player.x===this.COLUMN_MIDDLE&&this.player.y===this.ROW_MIDDLE){cancelAnimationFrame(this.requestAnimation),setTimeout(()=>{alert("winner"),this.grid=new c(this.ctx,[this.COLUMN_MIDDLE,this.ROW_MIDDLE],this.BOX_WIDTH,this.BOX_HEIGHT),this.setUpGrid(),this.player=new f(0,0),new d(this.player,this.grid.gridData),this.start()},0);return}this.requestAnimation=requestAnimationFrame(this.animate.bind(this))}setUpGrid(){for(let t=0;t<this.TOTAL_CELL;t++){const i=t%this.COLUMN,s=Math.floor(t/this.COLUMN);this.grid.addCell(`${i}-${s}`,new O(i,s,this.ROW-1,this.COLUMN-1))}}}window.onload=async()=>{const e=document.querySelector("#canvas");new m(e).start()};
