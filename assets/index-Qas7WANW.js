var y=Object.defineProperty;var x=(i,t,e)=>t in i?y(i,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):i[t]=e;var l=(i,t,e)=>(x(i,typeof t!="symbol"?t+"":t,e),e);(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const r of document.querySelectorAll('link[rel="modulepreload"]'))s(r);new MutationObserver(r=>{for(const n of r)if(n.type==="childList")for(const o of n.addedNodes)o.tagName==="LINK"&&o.rel==="modulepreload"&&s(o)}).observe(document,{childList:!0,subtree:!0});function e(r){const n={};return r.integrity&&(n.integrity=r.integrity),r.referrerPolicy&&(n.referrerPolicy=r.referrerPolicy),r.crossOrigin==="use-credentials"?n.credentials="include":r.crossOrigin==="anonymous"?n.credentials="omit":n.credentials="same-origin",n}function s(r){if(r.ep)return;r.ep=!0;const n=e(r);fetch(r.href,n)}})();class I{constructor(t,e,s){l(this,"visited",!1);l(this,"walls",[!0,!0,!0,!0]);this.x=t,this.y=e,this.lastCell=s}get position(){return new h(this.x,this.y)}get getX(){return this.x}get getY(){return this.y}getNeighbors(t){return[t[this.getNeighborIndex(new h(this.x,this.y-1))],t[this.getNeighborIndex(new h(this.x+1,this.y))],t[this.getNeighborIndex(new h(this.x,this.y+1))],t[this.getNeighborIndex(new h(this.x-1,this.y))]].filter(Boolean)}checkNeighbors(t){const e=this.getNeighbors(t).filter(({visited:s})=>!s);return e.length>0?e[Math.floor(Math.random()*e.length)]:void 0}getNeighborIndex(t){return this.isOutSideBoundary(t)?"":`${t.x}-${t.y}`}isOutSideBoundary(t){const{x:e,y:s}=t;return e<0||s<0||e>this.lastCell.x||s>this.lastCell.y}}class p{constructor(t,e){this.width=t,this.height=e}}var a=(i=>(i[i.Top=0]="Top",i[i.Right=1]="Right",i[i.Bottom=2]="Bottom",i[i.Left=3]="Left",i))(a||{});const d=(i,t,e)=>{i.beginPath(),i.moveTo(t.x,t.y),i.lineTo(e.x,e.y),i.strokeStyle="red",i.lineWidth=5,i.stroke(),i.closePath()},v=(i,t,e,s="blue")=>{const{x:r,y:n}=t,{width:o,height:c}=e;i.beginPath(),i.rect(r,n,o,c),i.fillStyle=s,i.fill(),i.closePath()},z=(i,t)=>{i.clearRect(0,0,t.width,t.height)},m=i=>`${i.x}-${i.y}`;class b{constructor(t,e){this.ctx=t,this.mazeInfo=e}reset(){z(this.ctx,this.mazeInfo)}drawMaze(t){for(const e of t)this.drawWalls(e)}drawBox(t,e="blue"){v(this.ctx,t,this.mazeInfo.cell,e)}drawWalls(t){const{width:e,height:s}=this.mazeInfo.cell,{walls:r,position:{x:n,y:o}}=t;r[a.Top]&&d(this.ctx,new h(this.startingX(n),this.startingY(o)),new h(this.startingX(n)+e,this.startingY(o))),r[a.Right]&&d(this.ctx,new h(this.startingX(n)+e,this.startingY(o)+s),new h(this.startingX(n)+e,this.startingY(o))),r[a.Bottom]&&d(this.ctx,new h(this.startingX(n)+e,this.startingY(o)+s),new h(this.startingX(n),this.startingY(o)+s)),r[a.Left]&&d(this.ctx,new h(this.startingX(n),this.startingY(o)+s),new h(this.startingX(n),this.startingY(o)))}startingX(t){return t*this.mazeInfo.cell.width}startingY(t){return t*this.mazeInfo.cell.height}}class C{constructor(t){l(this,"gridData",{});l(this,"visitedCellStack",[]);this.mazeInfo=t}get cells(){return Object.values(this.gridData)}reset(){return this.gridData={},this}generate(){for(let t=0;t<this.mazeInfo.cellCount;t++){const e=t%this.mazeInfo.column,s=Math.floor(t/this.mazeInfo.column);this.gridData[`${e}-${s}`]=new I(e,s,this.mazeInfo.lastCell)}return this}resetVisited(){for(const t of this.cells)t.visited=!1;return this}findPath(t){let e=this.gridData[m(t)];for(;e&&!this.isGoalCell(e.position);){e.visited=!0;const s=e.checkNeighbors(this.gridData);s?(this.removeWalls(e,s),this.visitedCellStack.push(s),e=s):e=this.visitedCellStack.pop()}return this}fillUnvisitedPath(){let t=this.firstUnvisitedCell();for(;t;){t.visited=!0;const e=t.checkNeighbors(this.gridData);e?(this.removeWalls(t,e),this.visitedCellStack.push(e),t=e):(t=this.visitedCellStack.pop(),t||(t=this.firstUnvisitedCell()))}return this}removeWalls(t,e){const{x:s,y:r}=t.position,{x:n,y:o}=e.position;return n!==s?n>s?(t.walls[a.Right]=!1,e.walls[a.Left]=!1):(t.walls[a.Left]=!1,e.walls[a.Right]=!1):o>r?(t.walls[a.Bottom]=!1,e.walls[a.Top]=!1):(t.walls[a.Top]=!1,e.walls[a.Bottom]=!1),this}firstUnvisitedCell(){return this.cells.filter(({visited:t})=>!t)[0]}isGoalCell(t){const{x:e,y:s}=this.mazeInfo.goal;return e===t.x&&s===t.y}}class P{constructor(t,e,s,r){this.row=t,this.column=e,this.width=s,this.height=r}get cell(){return new p(this.width/this.column,this.height/this.row)}get goal(){return new h(Math.round(this.column/2),Math.round(this.row/2))}get goalCoordinate(){return new h(this.goal.x*this.cell.width,this.goal.y*this.cell.height)}get cellCount(){return this.row*this.column}get lastCell(){return new h(this.column-1,this.row-1)}}const g=["ArrowUp","ArrowRight","ArrowDown","ArrowLeft"];class f{constructor(t,e,s,r){this.x=t,this.y=e,this.grid=s,this.mazeInfo=r,window.addEventListener("keydown",({code:n,key:o})=>{const c=g.indexOf(n);g.includes(o)&&this.validMove(c)&&this.move(c)})}get coordinate(){return new h(this.x*this.mazeInfo.cell.width,this.y*this.mazeInfo.cell.height)}get onGoalArea(){const{x:t,y:e}=this.mazeInfo.goal;return this.x===t&&this.y===e}getPlayerPosition(){return this.grid[m(new h(this.x,this.y))]}validMove(t){return!this.getPlayerPosition().walls[t]}move(t){switch(t){case a.Top:this.y-=1;break;case a.Right:this.x+=1;break;case a.Bottom:this.y+=1;break;case a.Left:this.x-=1;break}}}class h{constructor(t,e){this.x=t,this.y=e}}class L{constructor(t,e){l(this,"grid");l(this,"player");l(this,"drawer");l(this,"requestAnimation",0);this.ctx=t,this.mazeInfo=e,this.grid=new C(this.mazeInfo),this.grid.generate(),this.player=new f(0,0,this.grid.gridData,this.mazeInfo),this.drawer=new b(this.ctx,this.mazeInfo)}initialize(){this.grid.findPath(new h(this.mazeInfo.column-1,this.mazeInfo.row-1)).resetVisited().findPath(new h(0,0)).fillUnvisitedPath(),this.animate()}restart(){this.grid.reset(),this.grid.generate(),this.player=new f(0,0,this.grid.gridData,this.mazeInfo),this.initialize()}animate(){if(this.drawer.reset(),this.drawer.drawBox(this.mazeInfo.goalCoordinate),this.drawer.drawMaze(this.grid.cells),this.drawer.drawBox(this.player.coordinate,"orange"),this.player.onGoalArea){cancelAnimationFrame(this.requestAnimation),setTimeout(()=>{alert("You Win!!!"),this.restart()},0);return}this.requestAnimation=requestAnimationFrame(this.animate.bind(this))}}const u=400,w=800,N=15,Y=29;window.onload=()=>{const i=document.querySelector("#canvas"),t=i.getContext("2d");i.height=u,i.width=w,new L(t,new P(N,Y,w,u)).initialize()};
